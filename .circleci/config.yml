version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point

    working_directory: ~/paymentservice # directory where steps will run

    docker: # run the steps with Docker
      - image: circleci/openjdk:11-stretch # ...with this image as the primary container; this is where all `steps` will run

    steps: # a collection of executable commands
      - add_ssh_keys:
          fingerprints:
            - "e6:00:71:ec:7c:cd:25:43:12:37:65:38:59:51:d4:e3"
      - checkout # check out source code to working directory

      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: paymentservice-{{ checksum "pom.xml" }}

      - run: mvn dependency:go-offline # gets the project dependencies

      - save_cache: # saves the project dependencies
          paths:
            - ~/.m2
          key: paymentservice-{{ checksum "pom.xml" }}

      - run: mvn package # run the actual tests

      - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard.
          # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: target/surefire-reports

      - store_artifacts: # store the uberjar as an artifact
          # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: target/paymentservice.jar
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
      - deploy:
          machine:
            enabled: true
      - run:
          name: Deploy Over SSH
          command: |
            ssh $SSH_USER@$SSH_HOST mvn deploy
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy-job:
          requires:
            - build # only deploy once build job has completed
          filters:
            branches:
              only: master # only deploy on the master branch
